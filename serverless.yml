# Much of the below related to deployment should be setup in a local
# `serverless-local.yml` file and not committed back to this repository.
# You may *copy* `serverless-local-example.yml` included in this repository
# and rename it to match the below custom directiveâ€”just make sure you
# don't commit your changes back to the master repository.
#

# For full config options, check the docs:
#    docs.serverless.com
#


# Pin to only deploy specified Serverless versions
# frameworkVersion: ">=1.0.0 <2.0.0"
frameworkVersion: "=1.25.0"

service: ${file(serverless-local.yml):service}

provider:
  name: aws
  runtime: nodejs6.10
  stage: ${opt:stage, 'dev'}

  memorySize: 512
  timeout: 6
  versionFunctions: false

  region: us-east-2
  deploymentBucket:
    name: ${file(serverless-local.yml):deployment-bucket}
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "s3:ListBucket"
       Resource:
         Fn::Join:
           - ""
           - - "arn:aws:s3:::"
             - Ref: ${file(serverless-local.yml):iam-bucket}
    -  Effect: "Allow"
       Action:
         - "s3:GetObject"
         - "s3:PutObject"
       Resource:
         Fn::Join:
           - ""
           - - "arn:aws:s3:::"
             - Ref: ${file(serverless-local.yml):iam-bucket}
             - "/*"

plugins:
  - serverless-webpack

functions:
  health:
    handler: handler.health
    name: ${self:service}-health
    events:
      - http:
          method: get
          path: health

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/health'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2
